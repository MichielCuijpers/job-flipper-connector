/**
 * Autogenerated by Thrift Compiler (1.0.0-dev)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.wi.director.thrift.v1.templateset;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
@Generated(value = "Autogenerated by Thrift Compiler (1.0.0-dev)")
public class TemplateUnionSelectOpts implements org.apache.thrift.TBase<TemplateUnionSelectOpts, TemplateUnionSelectOpts._Fields>, java.io.Serializable, Cloneable, Comparable<TemplateUnionSelectOpts> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("TemplateUnionSelectOpts");

  private static final org.apache.thrift.protocol.TField TEMPLATE_SET_SELECT_OPTS_FIELD_DESC = new org.apache.thrift.protocol.TField("templateSetSelectOpts", org.apache.thrift.protocol.TType.STRUCT, (short)1);
  private static final org.apache.thrift.protocol.TField TEMPLATE_SELECT_OPTS_FIELD_DESC = new org.apache.thrift.protocol.TField("templateSelectOpts", org.apache.thrift.protocol.TType.STRUCT, (short)2);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new TemplateUnionSelectOptsStandardSchemeFactory());
  }

  public TemplateSetSelectOpts templateSetSelectOpts; // required
  public com.wi.director.thrift.v1.jobtemplate.TemplateSelectOpts templateSelectOpts; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    TEMPLATE_SET_SELECT_OPTS((short)1, "templateSetSelectOpts"),
    TEMPLATE_SELECT_OPTS((short)2, "templateSelectOpts");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // TEMPLATE_SET_SELECT_OPTS
          return TEMPLATE_SET_SELECT_OPTS;
        case 2: // TEMPLATE_SELECT_OPTS
          return TEMPLATE_SELECT_OPTS;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.TEMPLATE_SET_SELECT_OPTS, new org.apache.thrift.meta_data.FieldMetaData("templateSetSelectOpts", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, TemplateSetSelectOpts.class)));
    tmpMap.put(_Fields.TEMPLATE_SELECT_OPTS, new org.apache.thrift.meta_data.FieldMetaData("templateSelectOpts", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.wi.director.thrift.v1.jobtemplate.TemplateSelectOpts.class)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(TemplateUnionSelectOpts.class, metaDataMap);
  }

  public TemplateUnionSelectOpts() {
  }

  public TemplateUnionSelectOpts(
    TemplateSetSelectOpts templateSetSelectOpts,
    com.wi.director.thrift.v1.jobtemplate.TemplateSelectOpts templateSelectOpts)
  {
    this();
    this.templateSetSelectOpts = templateSetSelectOpts;
    this.templateSelectOpts = templateSelectOpts;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public TemplateUnionSelectOpts(TemplateUnionSelectOpts other) {
    if (other.isSetTemplateSetSelectOpts()) {
      this.templateSetSelectOpts = new TemplateSetSelectOpts(other.templateSetSelectOpts);
    }
    if (other.isSetTemplateSelectOpts()) {
      this.templateSelectOpts = new com.wi.director.thrift.v1.jobtemplate.TemplateSelectOpts(other.templateSelectOpts);
    }
  }

  public TemplateUnionSelectOpts deepCopy() {
    return new TemplateUnionSelectOpts(this);
  }

  @Override
  public void clear() {
    this.templateSetSelectOpts = null;
    this.templateSelectOpts = null;
  }

  public TemplateSetSelectOpts getTemplateSetSelectOpts() {
    return this.templateSetSelectOpts;
  }

  public TemplateUnionSelectOpts setTemplateSetSelectOpts(TemplateSetSelectOpts templateSetSelectOpts) {
    this.templateSetSelectOpts = templateSetSelectOpts;
    return this;
  }

  public void unsetTemplateSetSelectOpts() {
    this.templateSetSelectOpts = null;
  }

  /** Returns true if field templateSetSelectOpts is set (has been assigned a value) and false otherwise */
  public boolean isSetTemplateSetSelectOpts() {
    return this.templateSetSelectOpts != null;
  }

  public void setTemplateSetSelectOptsIsSet(boolean value) {
    if (!value) {
      this.templateSetSelectOpts = null;
    }
  }

  public com.wi.director.thrift.v1.jobtemplate.TemplateSelectOpts getTemplateSelectOpts() {
    return this.templateSelectOpts;
  }

  public TemplateUnionSelectOpts setTemplateSelectOpts(com.wi.director.thrift.v1.jobtemplate.TemplateSelectOpts templateSelectOpts) {
    this.templateSelectOpts = templateSelectOpts;
    return this;
  }

  public void unsetTemplateSelectOpts() {
    this.templateSelectOpts = null;
  }

  /** Returns true if field templateSelectOpts is set (has been assigned a value) and false otherwise */
  public boolean isSetTemplateSelectOpts() {
    return this.templateSelectOpts != null;
  }

  public void setTemplateSelectOptsIsSet(boolean value) {
    if (!value) {
      this.templateSelectOpts = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case TEMPLATE_SET_SELECT_OPTS:
      if (value == null) {
        unsetTemplateSetSelectOpts();
      } else {
        setTemplateSetSelectOpts((TemplateSetSelectOpts)value);
      }
      break;

    case TEMPLATE_SELECT_OPTS:
      if (value == null) {
        unsetTemplateSelectOpts();
      } else {
        setTemplateSelectOpts((com.wi.director.thrift.v1.jobtemplate.TemplateSelectOpts)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case TEMPLATE_SET_SELECT_OPTS:
      return getTemplateSetSelectOpts();

    case TEMPLATE_SELECT_OPTS:
      return getTemplateSelectOpts();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case TEMPLATE_SET_SELECT_OPTS:
      return isSetTemplateSetSelectOpts();
    case TEMPLATE_SELECT_OPTS:
      return isSetTemplateSelectOpts();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof TemplateUnionSelectOpts)
      return this.equals((TemplateUnionSelectOpts)that);
    return false;
  }

  public boolean equals(TemplateUnionSelectOpts that) {
    if (that == null)
      return false;

    boolean this_present_templateSetSelectOpts = true && this.isSetTemplateSetSelectOpts();
    boolean that_present_templateSetSelectOpts = true && that.isSetTemplateSetSelectOpts();
    if (this_present_templateSetSelectOpts || that_present_templateSetSelectOpts) {
      if (!(this_present_templateSetSelectOpts && that_present_templateSetSelectOpts))
        return false;
      if (!this.templateSetSelectOpts.equals(that.templateSetSelectOpts))
        return false;
    }

    boolean this_present_templateSelectOpts = true && this.isSetTemplateSelectOpts();
    boolean that_present_templateSelectOpts = true && that.isSetTemplateSelectOpts();
    if (this_present_templateSelectOpts || that_present_templateSelectOpts) {
      if (!(this_present_templateSelectOpts && that_present_templateSelectOpts))
        return false;
      if (!this.templateSelectOpts.equals(that.templateSelectOpts))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_templateSetSelectOpts = true && (isSetTemplateSetSelectOpts());
    list.add(present_templateSetSelectOpts);
    if (present_templateSetSelectOpts)
      list.add(templateSetSelectOpts);

    boolean present_templateSelectOpts = true && (isSetTemplateSelectOpts());
    list.add(present_templateSelectOpts);
    if (present_templateSelectOpts)
      list.add(templateSelectOpts);

    return list.hashCode();
  }

  @Override
  public int compareTo(TemplateUnionSelectOpts other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetTemplateSetSelectOpts()).compareTo(other.isSetTemplateSetSelectOpts());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTemplateSetSelectOpts()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.templateSetSelectOpts, other.templateSetSelectOpts);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTemplateSelectOpts()).compareTo(other.isSetTemplateSelectOpts());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTemplateSelectOpts()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.templateSelectOpts, other.templateSelectOpts);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("TemplateUnionSelectOpts(");
    boolean first = true;

    sb.append("templateSetSelectOpts:");
    if (this.templateSetSelectOpts == null) {
      sb.append("null");
    } else {
      sb.append(this.templateSetSelectOpts);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("templateSelectOpts:");
    if (this.templateSelectOpts == null) {
      sb.append("null");
    } else {
      sb.append(this.templateSelectOpts);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
    if (templateSetSelectOpts != null) {
      templateSetSelectOpts.validate();
    }
    if (templateSelectOpts != null) {
      templateSelectOpts.validate();
    }
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class TemplateUnionSelectOptsStandardSchemeFactory implements SchemeFactory {
    public TemplateUnionSelectOptsStandardScheme getScheme() {
      return new TemplateUnionSelectOptsStandardScheme();
    }
  }

  private static class TemplateUnionSelectOptsStandardScheme extends StandardScheme<TemplateUnionSelectOpts> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, TemplateUnionSelectOpts struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // TEMPLATE_SET_SELECT_OPTS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.templateSetSelectOpts = new TemplateSetSelectOpts();
              struct.templateSetSelectOpts.read(iprot);
              struct.setTemplateSetSelectOptsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // TEMPLATE_SELECT_OPTS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.templateSelectOpts = new com.wi.director.thrift.v1.jobtemplate.TemplateSelectOpts();
              struct.templateSelectOpts.read(iprot);
              struct.setTemplateSelectOptsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, TemplateUnionSelectOpts struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.templateSetSelectOpts != null) {
        oprot.writeFieldBegin(TEMPLATE_SET_SELECT_OPTS_FIELD_DESC);
        struct.templateSetSelectOpts.write(oprot);
        oprot.writeFieldEnd();
      }
      if (struct.templateSelectOpts != null) {
        oprot.writeFieldBegin(TEMPLATE_SELECT_OPTS_FIELD_DESC);
        struct.templateSelectOpts.write(oprot);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

}

