/**
 * Autogenerated by Thrift Compiler (1.0.0-dev)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.wi.director.thrift.v1.notification;


import java.util.Map;
import java.util.HashMap;
import org.apache.thrift.TEnum;

public enum NotificationEvent implements org.apache.thrift.TEnum {
  NamedMentionMessage(1),
  RoleMentionMessage(2),
  AllMentionMessage(3),
  ActionRequired(4),
  AddRole(5),
  RemoveRole(6),
  JobStart(7),
  JobComplete(8),
  JobReopen(9),
  IssueCreate(10),
  IssueResolve(11),
  IssueReopen(12),
  StandaloneIssueCreate(13),
  StandaloneIssueResolve(14),
  StandaloneIssueReopen(15),
  ThreadNamedMentionMessage(16),
  Deviation(17),
  Generic(18);

  private final int value;

  private NotificationEvent(int value) {
    this.value = value;
  }

  /**
   * Get the integer value of this enum value, as defined in the Thrift IDL.
   */
  public int getValue() {
    return value;
  }

  /**
   * Find a the enum type by its integer value, as defined in the Thrift IDL.
   * @return null if the value is not found.
   */
  public static NotificationEvent findByValue(int value) { 
    switch (value) {
      case 1:
        return NamedMentionMessage;
      case 2:
        return RoleMentionMessage;
      case 3:
        return AllMentionMessage;
      case 4:
        return ActionRequired;
      case 5:
        return AddRole;
      case 6:
        return RemoveRole;
      case 7:
        return JobStart;
      case 8:
        return JobComplete;
      case 9:
        return JobReopen;
      case 10:
        return IssueCreate;
      case 11:
        return IssueResolve;
      case 12:
        return IssueReopen;
      case 13:
        return StandaloneIssueCreate;
      case 14:
        return StandaloneIssueResolve;
      case 15:
        return StandaloneIssueReopen;
      case 16:
        return ThreadNamedMentionMessage;
      case 17:
        return Deviation;
      case 18:
        return Generic;
      default:
        return null;
    }
  }
}
