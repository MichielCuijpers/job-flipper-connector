/**
 * Autogenerated by Thrift Compiler (1.0.0-dev)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.parsable.thrift.v1.analytics;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
@Generated(value = "Autogenerated by Thrift Compiler (1.0.0-dev)")
public class JobsDashboard implements org.apache.thrift.TBase<JobsDashboard, JobsDashboard._Fields>, java.io.Serializable, Cloneable, Comparable<JobsDashboard> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("JobsDashboard");

  private static final org.apache.thrift.protocol.TField INCLUDE_STATES_FIELD_DESC = new org.apache.thrift.protocol.TField("includeStates", org.apache.thrift.protocol.TType.LIST, (short)1);
  private static final org.apache.thrift.protocol.TField REQUIRE_TEMPLATES_FIELD_DESC = new org.apache.thrift.protocol.TField("requireTemplates", org.apache.thrift.protocol.TType.LIST, (short)2);
  private static final org.apache.thrift.protocol.TField REQUIRE_ROLES_FIELD_DESC = new org.apache.thrift.protocol.TField("requireRoles", org.apache.thrift.protocol.TType.LIST, (short)3);
  private static final org.apache.thrift.protocol.TField JOB_METADATA_FIELD_DESC = new org.apache.thrift.protocol.TField("jobMetadata", org.apache.thrift.protocol.TType.LIST, (short)4);
  private static final org.apache.thrift.protocol.TField TEMPLATE_METADATA_FIELD_DESC = new org.apache.thrift.protocol.TField("templateMetadata", org.apache.thrift.protocol.TType.LIST, (short)5);
  private static final org.apache.thrift.protocol.TField SHOW_DURATION_FIELD_DESC = new org.apache.thrift.protocol.TField("showDuration", org.apache.thrift.protocol.TType.BOOL, (short)100);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new JobsDashboardStandardSchemeFactory());
  }

  public List<JobState> includeStates; // optional
  public List<String> requireTemplates; // optional
  public List<String> requireRoles; // optional
  public List<com.wi.director.thrift.v1.metadata.MetadataEntry> jobMetadata; // optional
  public List<com.wi.director.thrift.v1.metadata.MetadataEntry> templateMetadata; // optional
  public boolean showDuration; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    INCLUDE_STATES((short)1, "includeStates"),
    REQUIRE_TEMPLATES((short)2, "requireTemplates"),
    REQUIRE_ROLES((short)3, "requireRoles"),
    JOB_METADATA((short)4, "jobMetadata"),
    TEMPLATE_METADATA((short)5, "templateMetadata"),
    SHOW_DURATION((short)100, "showDuration");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // INCLUDE_STATES
          return INCLUDE_STATES;
        case 2: // REQUIRE_TEMPLATES
          return REQUIRE_TEMPLATES;
        case 3: // REQUIRE_ROLES
          return REQUIRE_ROLES;
        case 4: // JOB_METADATA
          return JOB_METADATA;
        case 5: // TEMPLATE_METADATA
          return TEMPLATE_METADATA;
        case 100: // SHOW_DURATION
          return SHOW_DURATION;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __SHOWDURATION_ISSET_ID = 0;
  private byte __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.INCLUDE_STATES,_Fields.REQUIRE_TEMPLATES,_Fields.REQUIRE_ROLES,_Fields.JOB_METADATA,_Fields.TEMPLATE_METADATA};
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.INCLUDE_STATES, new org.apache.thrift.meta_data.FieldMetaData("includeStates", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, JobState.class))));
    tmpMap.put(_Fields.REQUIRE_TEMPLATES, new org.apache.thrift.meta_data.FieldMetaData("requireTemplates", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING            , "UUID"))));
    tmpMap.put(_Fields.REQUIRE_ROLES, new org.apache.thrift.meta_data.FieldMetaData("requireRoles", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING            , "UUID"))));
    tmpMap.put(_Fields.JOB_METADATA, new org.apache.thrift.meta_data.FieldMetaData("jobMetadata", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.wi.director.thrift.v1.metadata.MetadataEntry.class))));
    tmpMap.put(_Fields.TEMPLATE_METADATA, new org.apache.thrift.meta_data.FieldMetaData("templateMetadata", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.wi.director.thrift.v1.metadata.MetadataEntry.class))));
    tmpMap.put(_Fields.SHOW_DURATION, new org.apache.thrift.meta_data.FieldMetaData("showDuration", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(JobsDashboard.class, metaDataMap);
  }

  public JobsDashboard() {
  }

  public JobsDashboard(
    boolean showDuration)
  {
    this();
    this.showDuration = showDuration;
    setShowDurationIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public JobsDashboard(JobsDashboard other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetIncludeStates()) {
      List<JobState> __this__includeStates = new ArrayList<JobState>(other.includeStates.size());
      for (JobState other_element : other.includeStates) {
        __this__includeStates.add(other_element);
      }
      this.includeStates = __this__includeStates;
    }
    if (other.isSetRequireTemplates()) {
      List<String> __this__requireTemplates = new ArrayList<String>(other.requireTemplates.size());
      for (String other_element : other.requireTemplates) {
        __this__requireTemplates.add(other_element);
      }
      this.requireTemplates = __this__requireTemplates;
    }
    if (other.isSetRequireRoles()) {
      List<String> __this__requireRoles = new ArrayList<String>(other.requireRoles.size());
      for (String other_element : other.requireRoles) {
        __this__requireRoles.add(other_element);
      }
      this.requireRoles = __this__requireRoles;
    }
    if (other.isSetJobMetadata()) {
      List<com.wi.director.thrift.v1.metadata.MetadataEntry> __this__jobMetadata = new ArrayList<com.wi.director.thrift.v1.metadata.MetadataEntry>(other.jobMetadata.size());
      for (com.wi.director.thrift.v1.metadata.MetadataEntry other_element : other.jobMetadata) {
        __this__jobMetadata.add(new com.wi.director.thrift.v1.metadata.MetadataEntry(other_element));
      }
      this.jobMetadata = __this__jobMetadata;
    }
    if (other.isSetTemplateMetadata()) {
      List<com.wi.director.thrift.v1.metadata.MetadataEntry> __this__templateMetadata = new ArrayList<com.wi.director.thrift.v1.metadata.MetadataEntry>(other.templateMetadata.size());
      for (com.wi.director.thrift.v1.metadata.MetadataEntry other_element : other.templateMetadata) {
        __this__templateMetadata.add(new com.wi.director.thrift.v1.metadata.MetadataEntry(other_element));
      }
      this.templateMetadata = __this__templateMetadata;
    }
    this.showDuration = other.showDuration;
  }

  public JobsDashboard deepCopy() {
    return new JobsDashboard(this);
  }

  @Override
  public void clear() {
    this.includeStates = null;
    this.requireTemplates = null;
    this.requireRoles = null;
    this.jobMetadata = null;
    this.templateMetadata = null;
    setShowDurationIsSet(false);
    this.showDuration = false;
  }

  public int getIncludeStatesSize() {
    return (this.includeStates == null) ? 0 : this.includeStates.size();
  }

  public java.util.Iterator<JobState> getIncludeStatesIterator() {
    return (this.includeStates == null) ? null : this.includeStates.iterator();
  }

  public void addToIncludeStates(JobState elem) {
    if (this.includeStates == null) {
      this.includeStates = new ArrayList<JobState>();
    }
    this.includeStates.add(elem);
  }

  public List<JobState> getIncludeStates() {
    return this.includeStates;
  }

  public JobsDashboard setIncludeStates(List<JobState> includeStates) {
    this.includeStates = includeStates;
    return this;
  }

  public void unsetIncludeStates() {
    this.includeStates = null;
  }

  /** Returns true if field includeStates is set (has been assigned a value) and false otherwise */
  public boolean isSetIncludeStates() {
    return this.includeStates != null;
  }

  public void setIncludeStatesIsSet(boolean value) {
    if (!value) {
      this.includeStates = null;
    }
  }

  public int getRequireTemplatesSize() {
    return (this.requireTemplates == null) ? 0 : this.requireTemplates.size();
  }

  public java.util.Iterator<String> getRequireTemplatesIterator() {
    return (this.requireTemplates == null) ? null : this.requireTemplates.iterator();
  }

  public void addToRequireTemplates(String elem) {
    if (this.requireTemplates == null) {
      this.requireTemplates = new ArrayList<String>();
    }
    this.requireTemplates.add(elem);
  }

  public List<String> getRequireTemplates() {
    return this.requireTemplates;
  }

  public JobsDashboard setRequireTemplates(List<String> requireTemplates) {
    this.requireTemplates = requireTemplates;
    return this;
  }

  public void unsetRequireTemplates() {
    this.requireTemplates = null;
  }

  /** Returns true if field requireTemplates is set (has been assigned a value) and false otherwise */
  public boolean isSetRequireTemplates() {
    return this.requireTemplates != null;
  }

  public void setRequireTemplatesIsSet(boolean value) {
    if (!value) {
      this.requireTemplates = null;
    }
  }

  public int getRequireRolesSize() {
    return (this.requireRoles == null) ? 0 : this.requireRoles.size();
  }

  public java.util.Iterator<String> getRequireRolesIterator() {
    return (this.requireRoles == null) ? null : this.requireRoles.iterator();
  }

  public void addToRequireRoles(String elem) {
    if (this.requireRoles == null) {
      this.requireRoles = new ArrayList<String>();
    }
    this.requireRoles.add(elem);
  }

  public List<String> getRequireRoles() {
    return this.requireRoles;
  }

  public JobsDashboard setRequireRoles(List<String> requireRoles) {
    this.requireRoles = requireRoles;
    return this;
  }

  public void unsetRequireRoles() {
    this.requireRoles = null;
  }

  /** Returns true if field requireRoles is set (has been assigned a value) and false otherwise */
  public boolean isSetRequireRoles() {
    return this.requireRoles != null;
  }

  public void setRequireRolesIsSet(boolean value) {
    if (!value) {
      this.requireRoles = null;
    }
  }

  public int getJobMetadataSize() {
    return (this.jobMetadata == null) ? 0 : this.jobMetadata.size();
  }

  public java.util.Iterator<com.wi.director.thrift.v1.metadata.MetadataEntry> getJobMetadataIterator() {
    return (this.jobMetadata == null) ? null : this.jobMetadata.iterator();
  }

  public void addToJobMetadata(com.wi.director.thrift.v1.metadata.MetadataEntry elem) {
    if (this.jobMetadata == null) {
      this.jobMetadata = new ArrayList<com.wi.director.thrift.v1.metadata.MetadataEntry>();
    }
    this.jobMetadata.add(elem);
  }

  public List<com.wi.director.thrift.v1.metadata.MetadataEntry> getJobMetadata() {
    return this.jobMetadata;
  }

  public JobsDashboard setJobMetadata(List<com.wi.director.thrift.v1.metadata.MetadataEntry> jobMetadata) {
    this.jobMetadata = jobMetadata;
    return this;
  }

  public void unsetJobMetadata() {
    this.jobMetadata = null;
  }

  /** Returns true if field jobMetadata is set (has been assigned a value) and false otherwise */
  public boolean isSetJobMetadata() {
    return this.jobMetadata != null;
  }

  public void setJobMetadataIsSet(boolean value) {
    if (!value) {
      this.jobMetadata = null;
    }
  }

  public int getTemplateMetadataSize() {
    return (this.templateMetadata == null) ? 0 : this.templateMetadata.size();
  }

  public java.util.Iterator<com.wi.director.thrift.v1.metadata.MetadataEntry> getTemplateMetadataIterator() {
    return (this.templateMetadata == null) ? null : this.templateMetadata.iterator();
  }

  public void addToTemplateMetadata(com.wi.director.thrift.v1.metadata.MetadataEntry elem) {
    if (this.templateMetadata == null) {
      this.templateMetadata = new ArrayList<com.wi.director.thrift.v1.metadata.MetadataEntry>();
    }
    this.templateMetadata.add(elem);
  }

  public List<com.wi.director.thrift.v1.metadata.MetadataEntry> getTemplateMetadata() {
    return this.templateMetadata;
  }

  public JobsDashboard setTemplateMetadata(List<com.wi.director.thrift.v1.metadata.MetadataEntry> templateMetadata) {
    this.templateMetadata = templateMetadata;
    return this;
  }

  public void unsetTemplateMetadata() {
    this.templateMetadata = null;
  }

  /** Returns true if field templateMetadata is set (has been assigned a value) and false otherwise */
  public boolean isSetTemplateMetadata() {
    return this.templateMetadata != null;
  }

  public void setTemplateMetadataIsSet(boolean value) {
    if (!value) {
      this.templateMetadata = null;
    }
  }

  public boolean isShowDuration() {
    return this.showDuration;
  }

  public JobsDashboard setShowDuration(boolean showDuration) {
    this.showDuration = showDuration;
    setShowDurationIsSet(true);
    return this;
  }

  public void unsetShowDuration() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __SHOWDURATION_ISSET_ID);
  }

  /** Returns true if field showDuration is set (has been assigned a value) and false otherwise */
  public boolean isSetShowDuration() {
    return EncodingUtils.testBit(__isset_bitfield, __SHOWDURATION_ISSET_ID);
  }

  public void setShowDurationIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __SHOWDURATION_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case INCLUDE_STATES:
      if (value == null) {
        unsetIncludeStates();
      } else {
        setIncludeStates((List<JobState>)value);
      }
      break;

    case REQUIRE_TEMPLATES:
      if (value == null) {
        unsetRequireTemplates();
      } else {
        setRequireTemplates((List<String>)value);
      }
      break;

    case REQUIRE_ROLES:
      if (value == null) {
        unsetRequireRoles();
      } else {
        setRequireRoles((List<String>)value);
      }
      break;

    case JOB_METADATA:
      if (value == null) {
        unsetJobMetadata();
      } else {
        setJobMetadata((List<com.wi.director.thrift.v1.metadata.MetadataEntry>)value);
      }
      break;

    case TEMPLATE_METADATA:
      if (value == null) {
        unsetTemplateMetadata();
      } else {
        setTemplateMetadata((List<com.wi.director.thrift.v1.metadata.MetadataEntry>)value);
      }
      break;

    case SHOW_DURATION:
      if (value == null) {
        unsetShowDuration();
      } else {
        setShowDuration((Boolean)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case INCLUDE_STATES:
      return getIncludeStates();

    case REQUIRE_TEMPLATES:
      return getRequireTemplates();

    case REQUIRE_ROLES:
      return getRequireRoles();

    case JOB_METADATA:
      return getJobMetadata();

    case TEMPLATE_METADATA:
      return getTemplateMetadata();

    case SHOW_DURATION:
      return isShowDuration();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case INCLUDE_STATES:
      return isSetIncludeStates();
    case REQUIRE_TEMPLATES:
      return isSetRequireTemplates();
    case REQUIRE_ROLES:
      return isSetRequireRoles();
    case JOB_METADATA:
      return isSetJobMetadata();
    case TEMPLATE_METADATA:
      return isSetTemplateMetadata();
    case SHOW_DURATION:
      return isSetShowDuration();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof JobsDashboard)
      return this.equals((JobsDashboard)that);
    return false;
  }

  public boolean equals(JobsDashboard that) {
    if (that == null)
      return false;

    boolean this_present_includeStates = true && this.isSetIncludeStates();
    boolean that_present_includeStates = true && that.isSetIncludeStates();
    if (this_present_includeStates || that_present_includeStates) {
      if (!(this_present_includeStates && that_present_includeStates))
        return false;
      if (!this.includeStates.equals(that.includeStates))
        return false;
    }

    boolean this_present_requireTemplates = true && this.isSetRequireTemplates();
    boolean that_present_requireTemplates = true && that.isSetRequireTemplates();
    if (this_present_requireTemplates || that_present_requireTemplates) {
      if (!(this_present_requireTemplates && that_present_requireTemplates))
        return false;
      if (!this.requireTemplates.equals(that.requireTemplates))
        return false;
    }

    boolean this_present_requireRoles = true && this.isSetRequireRoles();
    boolean that_present_requireRoles = true && that.isSetRequireRoles();
    if (this_present_requireRoles || that_present_requireRoles) {
      if (!(this_present_requireRoles && that_present_requireRoles))
        return false;
      if (!this.requireRoles.equals(that.requireRoles))
        return false;
    }

    boolean this_present_jobMetadata = true && this.isSetJobMetadata();
    boolean that_present_jobMetadata = true && that.isSetJobMetadata();
    if (this_present_jobMetadata || that_present_jobMetadata) {
      if (!(this_present_jobMetadata && that_present_jobMetadata))
        return false;
      if (!this.jobMetadata.equals(that.jobMetadata))
        return false;
    }

    boolean this_present_templateMetadata = true && this.isSetTemplateMetadata();
    boolean that_present_templateMetadata = true && that.isSetTemplateMetadata();
    if (this_present_templateMetadata || that_present_templateMetadata) {
      if (!(this_present_templateMetadata && that_present_templateMetadata))
        return false;
      if (!this.templateMetadata.equals(that.templateMetadata))
        return false;
    }

    boolean this_present_showDuration = true;
    boolean that_present_showDuration = true;
    if (this_present_showDuration || that_present_showDuration) {
      if (!(this_present_showDuration && that_present_showDuration))
        return false;
      if (this.showDuration != that.showDuration)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_includeStates = true && (isSetIncludeStates());
    list.add(present_includeStates);
    if (present_includeStates)
      list.add(includeStates);

    boolean present_requireTemplates = true && (isSetRequireTemplates());
    list.add(present_requireTemplates);
    if (present_requireTemplates)
      list.add(requireTemplates);

    boolean present_requireRoles = true && (isSetRequireRoles());
    list.add(present_requireRoles);
    if (present_requireRoles)
      list.add(requireRoles);

    boolean present_jobMetadata = true && (isSetJobMetadata());
    list.add(present_jobMetadata);
    if (present_jobMetadata)
      list.add(jobMetadata);

    boolean present_templateMetadata = true && (isSetTemplateMetadata());
    list.add(present_templateMetadata);
    if (present_templateMetadata)
      list.add(templateMetadata);

    boolean present_showDuration = true;
    list.add(present_showDuration);
    if (present_showDuration)
      list.add(showDuration);

    return list.hashCode();
  }

  @Override
  public int compareTo(JobsDashboard other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetIncludeStates()).compareTo(other.isSetIncludeStates());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIncludeStates()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.includeStates, other.includeStates);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRequireTemplates()).compareTo(other.isSetRequireTemplates());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRequireTemplates()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.requireTemplates, other.requireTemplates);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRequireRoles()).compareTo(other.isSetRequireRoles());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRequireRoles()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.requireRoles, other.requireRoles);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetJobMetadata()).compareTo(other.isSetJobMetadata());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetJobMetadata()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.jobMetadata, other.jobMetadata);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTemplateMetadata()).compareTo(other.isSetTemplateMetadata());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTemplateMetadata()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.templateMetadata, other.templateMetadata);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetShowDuration()).compareTo(other.isSetShowDuration());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetShowDuration()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.showDuration, other.showDuration);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("JobsDashboard(");
    boolean first = true;

    if (isSetIncludeStates()) {
      sb.append("includeStates:");
      if (this.includeStates == null) {
        sb.append("null");
      } else {
        sb.append(this.includeStates);
      }
      first = false;
    }
    if (isSetRequireTemplates()) {
      if (!first) sb.append(", ");
      sb.append("requireTemplates:");
      if (this.requireTemplates == null) {
        sb.append("null");
      } else {
        sb.append(this.requireTemplates);
      }
      first = false;
    }
    if (isSetRequireRoles()) {
      if (!first) sb.append(", ");
      sb.append("requireRoles:");
      if (this.requireRoles == null) {
        sb.append("null");
      } else {
        sb.append(this.requireRoles);
      }
      first = false;
    }
    if (isSetJobMetadata()) {
      if (!first) sb.append(", ");
      sb.append("jobMetadata:");
      if (this.jobMetadata == null) {
        sb.append("null");
      } else {
        sb.append(this.jobMetadata);
      }
      first = false;
    }
    if (isSetTemplateMetadata()) {
      if (!first) sb.append(", ");
      sb.append("templateMetadata:");
      if (this.templateMetadata == null) {
        sb.append("null");
      } else {
        sb.append(this.templateMetadata);
      }
      first = false;
    }
    if (!first) sb.append(", ");
    sb.append("showDuration:");
    sb.append(this.showDuration);
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class JobsDashboardStandardSchemeFactory implements SchemeFactory {
    public JobsDashboardStandardScheme getScheme() {
      return new JobsDashboardStandardScheme();
    }
  }

  private static class JobsDashboardStandardScheme extends StandardScheme<JobsDashboard> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, JobsDashboard struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // INCLUDE_STATES
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list16 = iprot.readListBegin();
                struct.includeStates = new ArrayList<JobState>(_list16.size);
                JobState _elem17;
                for (int _i18 = 0; _i18 < _list16.size; ++_i18)
                {
                  _elem17 = com.parsable.thrift.v1.analytics.JobState.findByValue(iprot.readI32());
                  struct.includeStates.add(_elem17);
                }
                iprot.readListEnd();
              }
              struct.setIncludeStatesIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // REQUIRE_TEMPLATES
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list19 = iprot.readListBegin();
                struct.requireTemplates = new ArrayList<String>(_list19.size);
                String _elem20;
                for (int _i21 = 0; _i21 < _list19.size; ++_i21)
                {
                  _elem20 = iprot.readString();
                  struct.requireTemplates.add(_elem20);
                }
                iprot.readListEnd();
              }
              struct.setRequireTemplatesIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // REQUIRE_ROLES
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list22 = iprot.readListBegin();
                struct.requireRoles = new ArrayList<String>(_list22.size);
                String _elem23;
                for (int _i24 = 0; _i24 < _list22.size; ++_i24)
                {
                  _elem23 = iprot.readString();
                  struct.requireRoles.add(_elem23);
                }
                iprot.readListEnd();
              }
              struct.setRequireRolesIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // JOB_METADATA
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list25 = iprot.readListBegin();
                struct.jobMetadata = new ArrayList<com.wi.director.thrift.v1.metadata.MetadataEntry>(_list25.size);
                com.wi.director.thrift.v1.metadata.MetadataEntry _elem26;
                for (int _i27 = 0; _i27 < _list25.size; ++_i27)
                {
                  _elem26 = new com.wi.director.thrift.v1.metadata.MetadataEntry();
                  _elem26.read(iprot);
                  struct.jobMetadata.add(_elem26);
                }
                iprot.readListEnd();
              }
              struct.setJobMetadataIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // TEMPLATE_METADATA
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list28 = iprot.readListBegin();
                struct.templateMetadata = new ArrayList<com.wi.director.thrift.v1.metadata.MetadataEntry>(_list28.size);
                com.wi.director.thrift.v1.metadata.MetadataEntry _elem29;
                for (int _i30 = 0; _i30 < _list28.size; ++_i30)
                {
                  _elem29 = new com.wi.director.thrift.v1.metadata.MetadataEntry();
                  _elem29.read(iprot);
                  struct.templateMetadata.add(_elem29);
                }
                iprot.readListEnd();
              }
              struct.setTemplateMetadataIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 100: // SHOW_DURATION
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.showDuration = iprot.readBool();
              struct.setShowDurationIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, JobsDashboard struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.includeStates != null) {
        if (struct.isSetIncludeStates()) {
          oprot.writeFieldBegin(INCLUDE_STATES_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I32, struct.includeStates.size()));
            for (JobState _iter31 : struct.includeStates)
            {
              oprot.writeI32(_iter31.getValue());
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.requireTemplates != null) {
        if (struct.isSetRequireTemplates()) {
          oprot.writeFieldBegin(REQUIRE_TEMPLATES_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, struct.requireTemplates.size()));
            for (String _iter32 : struct.requireTemplates)
            {
              oprot.writeString(_iter32);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.requireRoles != null) {
        if (struct.isSetRequireRoles()) {
          oprot.writeFieldBegin(REQUIRE_ROLES_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, struct.requireRoles.size()));
            for (String _iter33 : struct.requireRoles)
            {
              oprot.writeString(_iter33);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.jobMetadata != null) {
        if (struct.isSetJobMetadata()) {
          oprot.writeFieldBegin(JOB_METADATA_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.jobMetadata.size()));
            for (com.wi.director.thrift.v1.metadata.MetadataEntry _iter34 : struct.jobMetadata)
            {
              _iter34.write(oprot);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.templateMetadata != null) {
        if (struct.isSetTemplateMetadata()) {
          oprot.writeFieldBegin(TEMPLATE_METADATA_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.templateMetadata.size()));
            for (com.wi.director.thrift.v1.metadata.MetadataEntry _iter35 : struct.templateMetadata)
            {
              _iter35.write(oprot);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldBegin(SHOW_DURATION_FIELD_DESC);
      oprot.writeBool(struct.showDuration);
      oprot.writeFieldEnd();
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

}

